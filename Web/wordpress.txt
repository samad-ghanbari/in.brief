#################################### DATABASE
Wordpress base database tables:
	there are 12 tables as follows:

	- wp_options
	- wp_links
	- wp_users
	- wp_usermeta
	- wp_posts
	- wp_postmeta
	- wp_comments
	- wp_commentmeta
	- wp_terms
	- wp_termmeta
	- wp_term_taxonomy
	- wp_term_relationships

#################################### Table Info

	- wp_options
		The Options set under the Administration > Settings panel are stored in the wp_options table


	- wp_links

	- wp_users
		The list of users is maintained in table wp_users. 

	- wp_usermeta
		Each user features information called the meta data and it is stored in wp_usermeta. 

	- wp_posts
		The core of the WordPress data is the posts. It is stored in the wp_posts table. Also Pages and navigation menu items are stored in this table. 

	- wp_postmeta
		Each post features information called the meta data and it is stored in the wp_postmeta. Some plugins may add their own information to this table. 

	- wp_comments
		The comments within WordPress are stored in the wp_comments table. 

	- wp_commentmeta
	 	Each comment features information called the meta data and it is stored in the wp_commentmeta. 

	- wp_terms
		The categories for both posts and links and the tags for posts are found within the wp_terms table. 

	- wp_termmeta
		Each term features information called the meta data and it is stored in wp_termmeta. 

	- wp_term_taxonomy
		This table describes the taxonomy (category, link, or tag) for the entries in the wp_terms table. 

	- wp_term_relationships
		Posts are associated with categories and tags from the wp_terms table and this association is maintained in the wp_term_relationships table. The association of links to their respective categories are also kept in this table. 

#################################### INFO

* meta tables are key value based like: [meta_id, comment_id, meta_key, meta_value]

* wp_posts is important tables storing : post, page, menu...
	records are separated by field named post_type

* The default post types that are always included within a WordPress installation unless otherwise removed are:

    Post (Post Type: ‘post’)
    Page (Post Type: ‘page’)
    Attachment (Post Type: ‘attachment’)
    Revision (Post Type: ‘revision’)
    Navigation menu (Post Type: ‘nav_menu_item’)
    Block templates (Post Type: ‘wp_template’)
    Template parts (Post Type: ‘wp_template_part’) 
    ...

######################    to dowbload plugins and theme locally add this line to config file
define('FS_METHOD', 'direct');

##################################### Custom POST type
2 methods:
	1- plugin named: "Custom Post Type UI"
		when plugin disabled, you can't see this post type
	2- manually

 add follow codes in file:
 	wp_includes/functions.php

 	// Our custom post type function
function create_posttype() {
 
 // Set UI labels for Custom Post Type
    $labels = array(
        'name'                => _x( 'Books', 'Post Type General Name' ),
        'singular_name'       => _x( 'Book', 'Post Type Singular Name' ),
        'menu_name'           => __( 'Books'),
        'parent_item_colon'   => __( 'Parent Book' ),
        'all_items'           => __( 'All Books' ),
        'view_item'           => __( 'View Book' ),
        'add_new_item'        => __( 'Add New Book' ),
        'add_new'             => __( 'Add New' ),
        'edit_item'           => __( 'Edit Book' ),
        'update_item'         => __( 'Update Book' ),
        'search_items'        => __( 'Search Book' ),
        'not_found'           => __( 'Not Found' ),
        'not_found_in_trash'  => __( 'Not found in Trash' ),
    );
     
// Set other options for Custom Post Type
     
    $args = array(
        'label'               => __( 'nooks'),
        'description'         => __( 'Books You Need to read' ),
        'labels'              => $labels,
        // Features this CPT supports in Post Editor
        'supports'            => array( 'title', 'editor', 'categories', 'tags'. 'excerpt', 'author', 'thumbnail', 'comments', 'revisions', 'custom-fields', ),
        // You can associate this CPT with a taxonomy or custom taxonomy. 
        'taxonomies'          => array( 'genres' ),
        /* A hierarchical CPT is like Pages and can have
        * Parent and child items. A non-hierarchical CPT
        * is like Posts.
        */ 
        'hierarchical'        => false,
        'public'              => true,
        'show_ui'             => true,
        'show_in_menu'        => true,
        'show_in_nav_menus'   => true,
        'show_in_admin_bar'   => true,
        'menu_position'       => 5,
        'can_export'          => true,
        'has_archive'         => true,
        'exclude_from_search' => false,
        'publicly_queryable'  => true,
        'capability_type'     => 'post',
        'show_in_rest' => true,
 
    );
 
  
    register_post_type( 'books', $args );
}
// Hooking up our function to theme setup
add_action( 'init', 'create_posttype' );


########################################## Menu
menu can be created via : appearance > menu
for topic menu we can create a custome link with address #
menu post type : wp_navigation

########################################## Form
by default there is no tools available in WP to buid form, so pluginis needed.
by using plugins we create forms and insert the shortcode of the form in any page needed.

form plugins:
	- Gravity Forms **
		no lisence  >> no auto update
		
	- WPForms [free/paid] *good and easy [lite version doesn't have form entries]
		WPForms is the most beginner friendly WordPress contact form plugin.

	-- Formidable Forms[free/paid] *better choice 
		Formidable Forms is the most advanced WordPress form plugin in the market.
		They specialize in helping developers build complex form-focused solutions quickly.

	- HubSpot Forms [free/paid]
		HubSpot’s WordPress plugin is a free all-in-one marketing plugin that comes with tools like WordPress form builder, live chat, analytics, CRM, and more.
	- Gravity Forms
		Gravity Forms is a paid WordPress form builder plugin that comes with a lot of advanced functionality and features.

	-- Ninja Forms [free/paid] *good 
		Ninja Forms is a freemium contact form plugin for WordPress. It can be used to create highly interactive form with very little effort.

	- Contact Form 7 [free][avoid using it]
		There are really no pros to this plugin except the fact that it’s free, and often beginners make the mistake of installing it since it has a high active install (because a lot of old sites are using it).
		If you’re looking for a free WordPress form plugin, then WPForms Lite, Formidable Forms, and Ninja Forms are all significantly better solutions than Contact Form 7.


__________________________GRAVITY FORMS 

	1- download zip file from 
		https://github.com/wp-premium/gravityforms
		
	2- activate with no license and go on
	3- install plugin : 
										گرویتی فارسی
	4- CSS Ready Classes for Gravity Forms:
		
		gf_left_half
		gf_right_half
		
		gf_left_third
		gf_middle_third
		gf_right_third
		
		gf_list_2col
		
		gf_list_3col
		
		gf_list_4col
		
		gf_list_5col
		
		gf_list_inline
		
		
		
		gf_list_height_25
		gf_list_height_50
		gf_list_height_75
		gf_list_height_100
		gf_list_height_125
		gf_list_height_150
		
		gf_scroll_text
		
		
	shortcode:
		[gravityform id="1"]
		
	- hide form title :
		additional css
			body .gform_wrapper h3.gform_title {display: none !important;}
			
######################################### Costom CSS

 - Method 1: Adding Custom CSS Using Theme Customize
 	theme > customize > additional CSS
 	example :
	 	.me-btn a
		{
		border-radius:10px 0 10px 0;
		background-color:yellowgreen;
		font-size: 14px;
		padding:5px;
		color:green;
		}

		in page > add button : section advanced > additional css class insert me-btn

	additional css are stored in table wp_posts with post_type : custom_css



 - Method 2: Adding Custom CSS Using a Plugin
 	Simple Custom CSS plugin.
 	
 ##########################################  Pagination

** edit theme files:
		appearance > edit theme files > we can access header, footer, css, functions....
 - Manually
 - plugin
 		WP-PageNavi [WP-Admin -> Settings -> PageNavi for configuration]
 		WP-Paginate 


manullay :
	adding the following code in your theme’s functions.php file
	wp_content > theme > YOURTHEME/functions.php

		function wpbeginner_numeric_posts_nav()
		{
 
			    if( is_singular() )
			        return;
			 
			    global $wp_query;
			 
			    /** Stop execution if there's only 1 page */
			    if( $wp_query->max_num_pages <= 1 )
			        return;
			 
			    $paged = get_query_var( 'paged' ) ? absint( get_query_var( 'paged' ) ) : 1;
			    $max   = intval( $wp_query->max_num_pages );
			 
			    /** Add current page to the array */
			    if ( $paged >= 1 )
			        $links[] = $paged;
			 
			    /** Add the pages around the current page to the array */
			    if ( $paged >= 3 ) {
			        $links[] = $paged - 1;
			        $links[] = $paged - 2;
			    }
			 
			    if ( ( $paged + 2 ) <= $max ) {
			        $links[] = $paged + 2;
			        $links[] = $paged + 1;
			    }
			 
			    echo '<div class="navigation"><ul>' . "\n";
			 
			    /** Previous Post Link */
			    if ( get_previous_posts_link() )
			        printf( '<li>%s</li>' . "\n", get_previous_posts_link() );
			 
			    /** Link to first page, plus ellipses if necessary */
			    if ( ! in_array( 1, $links ) ) {
			        $class = 1 == $paged ? ' class="active"' : '';
			 
			        printf( '<li%s><a href="%s">%s</a></li>' . "\n", $class, esc_url( get_pagenum_link( 1 ) ), '1' );
			 
			        if ( ! in_array( 2, $links ) )
			            echo '<li>…</li>';
			    }
			 
			    /** Link to current page, plus 2 pages in either direction if necessary */
			    sort( $links );
			    foreach ( (array) $links as $link ) {
			        $class = $paged == $link ? ' class="active"' : '';
			        printf( '<li%s><a href="%s">%s</a></li>' . "\n", $class, esc_url( get_pagenum_link( $link ) ), $link );
			    }
			 
			    /** Link to last page, plus ellipses if necessary */
			    if ( ! in_array( $max, $links ) ) {
			        if ( ! in_array( $max - 1, $links ) )
			            echo '<li>…</li>' . "\n";
			 
			        $class = $paged == $max ? ' class="active"' : '';
			        printf( '<li%s><a href="%s">%s</a></li>' . "\n", $class, esc_url( get_pagenum_link( $max ) ), $max );
			    }
			 
			    /** Next Post Link */
			    if ( get_next_posts_link() )
			        printf( '<li>%s</li>' . "\n", get_next_posts_link() );
			 
			    echo '</ul></div>' . "\n";
			 
		}



you will have to add the following template tag in your theme’s index.php, archive.php, category.php, and any other archive page template.


			
		<?php wpbeginner_numeric_posts_nav(); ?>


 ##########################################  plugins

  - litespeed chache best for web server litespeed :
  	admin panel:tools: site : info : server
  
  - W3 Total Cache https!!
 
  - Yoast SEO Premium *
 
  - Ultimate Member *
  
  -  Really Simple SSL *
  
  - All In One WordPress Security *
 
  - Google Analytics >> incase theme not included it. it has codes to include in the header of site >> in case sanction site crashes.
 
  - Akismet *
 
  - Google XML Sitemaps
 
  - Jetpack
  
  - woocommerce * (dashboard file is in path: /plugin/woocommerce/template/myaccount/dashboard.php)
 
  - wp-parsidate
 
  - wp-jalali
 
 
 
 ************************************************************   SPEED UP
 ##########################################  Reversions
 
 Add the following to your wp-config.php file:

Switch off revisions entirely:

define( 'WP_POST_REVISIONS', false );

Limit revisions:

define( 'WP_POST_REVISIONS', 10 ); // Max 10 revisions






 
 
 

